version: '3.7'
networks:
  backend:
    driver: bridge
    name: backend
  frontend:
    driver: bridge
    name: frontend
services:
  database:
    image: postgres:12.1-alpine
    restart: unless-stopped
    env_file: .env
    # This should be an `expose` setting but we can't access it externally otherwise
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
  # The actual server
  api:
    image: discoingroup/discoin
    restart: unless-stopped
    env_file: .env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.discoin.rule=Host(`discoin.zws.im`)'
      - 'traefik.http.routers.discoin.entrypoints=web'
      - 'traefik.http.middlewares.discoin-compress.compress=true'
      - 'traefik.http.services.discoin.loadbalancer.server.port=80'
    depends_on:
      - database
    networks:
      - backend
    links:
      - database
  # Autoupdate images
  watchtower:
    image: v2tec/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  grafana:
    image: grafana/grafana
    restart: unless-stopped
    env_file: grafana.env
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - frontend
      - backend
    depends_on:
      - influxdb
    ports:
      - '3000:3000'
    links:
      - influxdb
      - database
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=Path(`/grafana`) || PathPrefix(`/grafana/`)'
      - 'traefik.http.routers.grafana.entrypoints=web'
      - 'traefik.http.middlewares.grafana-compress.compress=true'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
  influxdb:
    image: influxdb:1.5.4-alpine
    restart: unless-stopped
    env_file: influxdb.env
    expose:
      - '8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb
    networks:
      - backend
  cachet:
    image: cachethq/docker
    restart: unless-stopped
    env_file: cachet.env
    ports:
      - '8000:8000'
    networks:
      - frontend
      - backend
    links:
      - database
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.cachet.rule=PathPrefix(`/cachet`)'
      - 'traefik.http.routers.cachet.entrypoints=web'
      - 'traefik.http.middlewares.cachet-compress.compress=true'
      - 'traefik.http.services.cachet.loadbalancer.server.port=8000'
  traefik:
    image: traefik:v2.1.1
    restart: unless-stopped
    ports:
      - '80:80'
      - '8080:8080'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    command:
      [
        '--api.insecure=true',
        '--api.dashboard=true',
        '--providers.docker=true',
        '--providers.docker.exposedbydefault=false',
        '--entrypoints.web.address=:80',
      ]
    links:
      - api
    networks:
      - frontend
      - backend
volumes:
  pgdata:
    external: true
  grafana-storage:
    external: true
  influxdb-storage:
    external: true
